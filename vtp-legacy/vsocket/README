V_0_1_A
	First complete compile and test of TCP/UDP Socket library as a static
	library.
V_0_2_A
	First complete compile and test including all three protocols (TCP/UDP/
	Psockets). Test code is an integral part of each class with fork()
	being used to spawn client/servers...
V_0_3_A
	First fully working release with all libraries in one common structure.
V_0_4_A
	PSocket.cpp
	Coded msend, mrecv methods for multiplexed io(not yet operational).
	Added data members for support of multiplexed io.
	Use select() in recv() and send() methods.
	PSocket copy constructor needs more work. 
	PSocket operator= needs more work. 
	Socket.h
	SocketBufferCtrlBlk code (not yet operational).
	Todo:
		Replace list with vector.
		Resize vectors to make sure they are large enough to hold sockets.
		Each TCPSocket is now stored in the vector indexed on its _sockd.
		It is assumed that the range of sockds is from 3 to 3+_num_ports.
		Need to check error conditions.
		Add nonblocking io...
V_0_5_A
	First fully integrated with automake/autoconf
V_0_5_B
	Ironed out a few bugs with config/ and depcomp (need to remove these
	prior to executing bootstrap and make).
V_0_6_A
	Added File.h File.cpp to vsocket module. This encapsulates file i/o
	and also allows non-blocking file i/o. Started to test non-blocking
	socket and file i/o.
V_0_6_B
	Adding deque to main.cpp...
	Fixed bugs in Socket.cpp and File.cpp in the set_blocking function.
	_blocking was assigned to parameter b at the beginning of the block.
	A check was then done to see if they were the same. The check return-ed
	if b and _blocking were the same. So it always returned! Non-blocking
	functionality now works for Socket.cpp and Socket.h
	Removed all exception throwing from TCPSocket for the case where 	
	a system call returns -1. Instead, leave it up to the client to handle this.

TCPSocket.cpp:
	send()
	recv()
	while loops need to be activated...

V_0_7_A
	First version released to Tom and Jerry.
V_0_7_B
	VRSockets now working losslessly (provided sender slowed down). Added 
	sequence number processing and header processing.
V_0_7_C
	Added state to processing loops. Added Go-back-N retransmission.
V_0_7_D
V_0_7_E
	Cleaned up build system so that it should now build seamlessly on
	Linux and OSX.
V_0_7_F
	Added real-time priority scheduling to increase throughput.
	Optimized VRSocketA class for throughput.
V_0_7_G
	Minor bug fix.
V_0_7_H
	Added RTP framing.
